# アプリケーション名の設定
# これはSpring Bootアプリケーションの名前を定義します
spring.application.name=SpringBootSample

# データソース設定
# H2インメモリデータベースのURL設定
# testdb: データベース名
# DB_CLOSE_DELAY=-1: プロセスが終了するまでデータベースを開いたままにする
# DB_CLOSE_ON_EXIT=FALSE: JVMの終了時にデータベースを閉じない
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# JDBCドライバーの指定
# H2データベース用のドライバーを指定します
spring.datasource.driver-class-name=org.h2.Driver

# データベースユーザー名
# H2データベースのデフォルトユーザー名はsaです
spring.datasource.username=sa

# データベースパスワード（空文字列）
spring.datasource.password=

# SQLスクリプトのエンコーディング
# SQLファイルの文字エンコーディングをUTF-8に設定します
spring.datasource.sql-script-encoding=UTF-8

# データベースの初期化を有効にする
# アプリケーション起動時にデータベースを初期化します
spring.datasource.initialize=true

# スキーマ定義SQLファイルのパス
# データベーススキーマを定義するSQLファイルの場所を指定します
spring.datasource.schema=classpath:schema.sql

# 初期データ投入SQLファイルのパス
# 初期データを投入するSQLファイルの場所を指定します
spring.datasource.data=classpath:data.sql

# H2データベースコンソールの有効化
# これにより、ブラウザからH2コンソールにアクセスできるようになります
spring.h2.console.enabled=true

# メッセージ設定
# i18nフォルダ内のmessagesファイルをベースにメッセージを読み込む
# src/main/resoucesからの相対パス
spring.messages.basename=i18n/messages,i18n/ValidationMessages

# MyBatis
mybatis.mapper-locations=classpath*:/mapper/h2/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.type-aliases-package=com.example.domain.user.model

# Log Level
logging.level.com.example=debug